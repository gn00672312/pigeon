## NORMAL
DIR_MONITOR = '__dev_tests/tst_scan'
DIR_ARCHIVE = '__dev_tests/archive'
DIR_ARCHIVE_UNKNOWN = '__dev_tests/archive'
DIR_ARCHIVE_SUCCESS = DIR_ARCHIVE
DIR_ARCHIVE_FAILURE = DIR_ARCHIVE
DIR_SCRIPT = ''
SECS_DELAY_TO_PROCESS = 5
SECS_TIMEOUT_FOR_ACTION = 10

EXEC_TASK = {
    r'^(?P<file>1)$': {
        'delay': 5,
        'action': [
            {
                'executable': 'python',
                'script': '__dev_tests/normal.py',
                'argument': '%(file)s',
                'cwd': '__dev_tests',
                'timeout': 20,
            },
            {
                'executable': 'python',
                'script': '__dev_tests/normal1.py',
                'argument': '%(file)s',
            },
        ],
        'parallel': True,
        'queue': 'qa',
        'archive':{
            'default': [
                'data/',
                '',
            ]
        },
    },
    r'^(?P<file>2)$': {
        'delay': 5,
        'action': [{
                'executable': 'python',
                'script': '__dev_tests/normal.py',
                'argument': '%(file)s'
            },
            {
                'executable': 'python',
                'script': '__dev_tests/normal1.py',
                'cwd': '__dev_tests',
                'argument': '%(file)s'
            }
        ],
        'parallel': False,
        'queue': 'qa',
        'archive': {
            'success': False,
            'failure': ['failure/']
        }
    },
    r'^(?P<file>3)$': {
        'delay': 5,
        'action': [{
            'executable': 'python',
            'script': '__dev_tests/crash.py',
            }
        ],
        'queue': 'default',
        'archive': {
            'default': True,
        }
    },
    r'^(?P<file>4)$': {
        'delay': 5,
        'action': [{
            'executable': 'python',
            'script': '__dev_tests/fail.py',
            }
        ],
        'queue': 'qa',
        'archive': {
            'success': False,
            'failure': ['failure/']
        }
    },
}

MOVE_TASK = {
    r'^(?P<file>m1)$': {
        'path': '/not_exist_dir/%(file)s',
    },
    r'^(?P<file>m2)$': {
        'path': [
            '__dev_tests/a1/%(file)s',
            '__dev_tests/a2/%(file)s-2',
        ]
    },
    r'^(?P<file>m3)$': {
        'path': [
            '__dev_tests',
            '__dev_tests',
        ]
    },
}

QUEUE = {
    'qa': {
        'priority': 1,
        'max': 2,
    },
    'default': {
        'priority': 99999999,
        'max': 1,
    }
}


## INTEGRATE_TEST
DIR_MONITOR = '__dev_tests/tst_scan'
DIR_ARCHIVE = '__dev_tests/archive'
DIR_ARCHIVE_UNKNOWN = '__dev_tests/archive'
DIR_ARCHIVE_SUCCESS = DIR_ARCHIVE
DIR_ARCHIVE_FAILURE = DIR_ARCHIVE
DIR_SCRIPT = ''
SECS_DELAY_TO_PROCESS = 5

EXEC_TASK = {
    r'^(?P<file>4\w{1})$': {
        'delay': 5,
        'action': [{
            'executable': 'python',
            'script': '__dev_tests/normal.py',
            'argument': '%(file)s'
        }],
        'queue': 'qa',
    },
    r'^(?P<file>2)$': {
        'action': [{
            'executable': 'python',
            'script': '__dev_tests/normal.py',
            'argument': '%(file)s'
        }],
        'queue': 'default',
    },
    r'^(?P<file>3)$': {
        'action': [{
            'executable': 'python',
            'script': '__dev_tests/normal.py',
            'argument': '%(file)s'
        }],
        'queue': 'default',
    },
    r'^(?P<file>1)$': {
        'action': [{
            'executable': 'python',
            'script': '__dev_tests/normal.py',
            'argument': '%(file)s'
        }],
        'queue': 'qa',
    },
    r'^(?P<file>5)$': {
        'action': [{
            'executable': 'python',
            'script': '__dev_tests/normal.py',
            'argument': '%(file)s'
        }],
        'queue': 'qa',
    },
    r'^(?P<file>6)$': {
        'action': [{
            'executable': 'python',
            'script': '__dev_tests/normal.py',
            'argument': '%(file)s'
        }],
        'queue': 'qa',
    },
    r'^(?P<file>7)$': {
        'action': [{
            'executable': 'python',
            'script': '__dev_tests/normal.py',
            'argument': '%(file)s'
        }],
        'queue': 'default',
    },
    r'^(?P<file>8)$': {
        'action': [{
            'executable': 'python',
            'script': '__dev_tests/normal.py',
            'argument': '%(file)s'
        }],
        'queue': 'qa',
    },
    r'^(?P<file>10)$': {
        'action': [{
            'executable': 'python',
            'script': '__dev_tests/normal.py',
            'argument': '%(file)s'
        }],
        'queue': 'qa',
    },
}

QUEUE = {
    'qa': {
        'priority': 1,
        'max': 2,
    },
    'default': {
        'priority': 99999999,
        'max': 1,
    }
}


## RUSH
DIR_MONITOR = '__dev_tests/tst_scan'
DIR_ARCHIVE = '__dev_tests/archive'
DIR_ARCHIVE_UNKNOWN = '__dev_tests/archive'
DIR_ARCHIVE_SUCCESS = DIR_ARCHIVE
DIR_ARCHIVE_FAILURE = DIR_ARCHIVE
DIR_SCRIPT = ''
SECS_DELAY_TO_PROCESS = 5

EXEC_TASK = {
    r'^(?P<file>r-\d+)$': {
        'action': [
            {
                'executable': 'python',
                'script': '__dev_tests/rush.py',
                'argument': '%(FULL_PATH_FILENAME)s'
            },
            {
                'executable': 'python',
                'script': '__dev_tests/rush1.py',
                'argument': '%(FULL_PATH_FILENAME)s'
            },
        ],
        'parallel': True,
        'queue': 'default',
        'archive': {
            'default': False,
        }
    },
    r'^(?P<file>fail\d+)$': {
        'delay': 5,
        'action': [{
            'executable': 'python',
            'script': '__dev_tests/fail.py',
            }
        ],
        'queue': 'ff',
        'archive': {
            'success': False,
            'failure': ['failure/']
        }
    },
    r'^(?P<file>crash\d+)$': {
        'delay': 5,
        'action': [{
            'executable': 'python',
            'script': '__dev_tests/crash.py',
            }
        ],
        'queue': 'default',
        'archive': {
            'success': False,
            'failure': ['failure/']
        }
    },
}

MOVE_TASK = {
}

QUEUE = {
    'default': {
        'priority': 1,
        'max': 10,
    },
    'ff': {
        'priority': 2,
        'max': 10,
    },
}


## NUM_MAX_PROCESSOR_IS_0
NUM_MAX_PROCESSOR = 0
QUEUE = {
    'default': {
        'priority': 99999999,
        'max': 1,
    }
}

## TASK_DELAY_IS_NEGATIVE
EXEC_TASK = {
    r'^(?P<file>delay_is_string)$': {
        'delay': -1
    },
}
QUEUE = {
    'default': {
        'priority': 99999999,
        'max': 1,
    }
}

## TASK_DELAY_IS_STRING
EXEC_TASK = {
    r'^(?P<file>delay_is_string)$': {
        'delay': "-1"
    },
}
QUEUE = {
    'default': {
        'priority': 99999999,
        'max': 1,
    }
}

## TASK_NO_SCRIPT_EXEC
EXEC_TASK = {
    r'^(?P<file>)$': {
        'delay': 5
    },
}
QUEUE = {
    'default': {
        'priority': 99999999,
        'max': 1,
    }
}

## TIMEOUT_IS_STRING
SECS_TIMEOUT_FOR_ACTION = "10"

## QUEUE_MAX_IS_0
QUEUE = {
    'max_is_0': {
        'priority': 1,
        'max': 0,
    }
}


## QUEUE_PRIORITY_IS_STRING
QUEUE = {
    'priority_is_string': {
        'priority': "2",
        'max': 3,
    }
}


## SYNTAX_ERROR
TEST_DICT = {
    key: "12345,
    key_list: ("1234", "5678")
}


## TASK_HAS_ONLY_SCRIPT
EXEC_TASK = {
    r'^(?P<file>has_only_script)$': {
        'action': [{
            'script': 'has_only_script.py',
        }]
    }
}

## EMPTY
# empty


## MULTI_SCRIPT
EXEC_TASK = {
    r'^(?P<file>1)$': {
        'delay': 50,
        'action': [{
            'executable': 'python',
            'script': '0.py',
            'cwd': '/opt/CloudyBay',
        }, {
            'executable': 'python',
            'script': '1.py',
            'cwd': '/opt/CloudyBay',
        }],
        'queue': 'qa',
        'archive': {
            'default':[
                'data',
                '/opt/CloudyBay/data/',
            ]
        },
    },
}
QUEUE = {
    'qa': {
        'priority': 1,
        'max': 1,
    },
    'default': {
        'priority': 99999999,
        'max': 1,
    }
}

## MULTI_SOURCE
EXEC_TASK = {
    r'^(?P<file>1)$': {
        'action': [{
            'executable': 'python',
            'script': 'z.py',
            'cwd': '/opt/CloudyBay',
        }],
        'delay': 50,
        'queue': 'qa',
        'archive': {
            'default':[
                'data',
                '/opt/CloudyBay/data/',
            ]
        },
    },
}
QUEUE = {
    'qa': {
        'priority': 1,
        'max': 1,
    },
    'default': {
        'priority': 99999999,
        'max': 1,
    }
}


## A_LOT_QUEUE_NUM
DIR_MONITOR = '__dev_tests/tst_scan'
DIR_ARCHIVE = '__dev_tests/archive'
DIR_ARCHIVE_UNKNOWN = '__dev_tests/archive'
DIR_ARCHIVE_SUCCESS = DIR_ARCHIVE
DIR_ARCHIVE_FAILURE = DIR_ARCHIVE
DIR_SCRIPT = ''
SECS_DELAY_TO_PROCESS = 5

EXEC_TASK = {
    r'^(?P<file>a-\d+)$': {
        'action': [
            {
                'executable': 'python',
                'script': '__dev_tests/rush.py',
                'argument': '%(FULL_PATH_FILENAME)s'
            },
        ],
        'parallel': True,
        'queue': 'default',
        'archive': {
            'default': False,
        }
    },
    r'^(?P<file>b-\d+)$': {
        'action': [
            {
                'executable': 'python',
                'script': '__dev_tests/rush.py',
                'argument': '%(FULL_PATH_FILENAME)s'
            },
        ],
        'queue': 'qa',
        'archive': {
            'default': False,
        }
    },
}
QUEUE = {
    'qa': {
        'priority': 1,
        'max': 5,
    },
    'default': {
        'priority': 99999999,
        'max': 5,
    }
}

## TIMEOUT
DIR_MONITOR = '__dev_tests/tst_scan'
DIR_ARCHIVE = '__dev_tests/archive'
DIR_ARCHIVE_UNKNOWN = '__dev_tests/archive'
DIR_ARCHIVE_SUCCESS = DIR_ARCHIVE
DIR_ARCHIVE_FAILURE = DIR_ARCHIVE
DIR_SCRIPT = ''
SECS_DELAY_TO_PROCESS = 5
SECS_TIMEOUT_FOR_ACTION = 10

EXEC_TASK = {
    r'^(?P<file>test-default)$': {
        'action': [
            {
                'executable': 'python',
                'script': '__dev_tests/run_timeout.py',
                'argument': '%(FULL_PATH_FILENAME)s'
            },
        ],
        'queue': 'default',
        'archive': {
            'failure': ['failure/'],
        }
    },
    r'^(?P<file>test-timeout)$': {
        'action': [
            {
                'executable': 'python',
                'script': '__dev_tests/run_timeout.py',
                'argument': '%(FULL_PATH_FILENAME)s',
                'timeout': 5
            },
        ],
        'queue': 'default',
        'archive': {
            'failure': ['failure/'],
        }
    },
    r'^(?P<file>test-pass)$': {
        'action': [
            {
                'executable': 'python',
                'script': '__dev_tests/run_timeout.py',
                'argument': '%(FULL_PATH_FILENAME)s',
                'timeout': 30,
            },
        ],
        'queue': 'default',
    },
}
QUEUE = {
    'default': {
        'priority': 99999999,
        'max': 5,
    }
}

